buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'

group 'com.isel.reverseproxy'
version '1.0-SNAPSHOT'
mainClassName = 'MainKt'

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlin-js-wrappers' }
}

dependencies {
    compile "org.slf4j:slf4j-api:$slf4j_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "io.ktor:ktor-client-core:$ktor_version"
    compile "io.ktor:ktor-client-core-jvm:$ktor_version"
    compile "io.ktor:ktor-client-apache:$ktor_version"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-auth:$ktor_version"
    compile "io.ktor:ktor-client-logging-jvm:$ktor_version"
    compile "io.ktor:ktor-html-builder:$ktor_version"
    compile "org.jetbrains:kotlin-css-jvm:1.0.0-pre.31-kotlin-1.2.41"
    compile "io.lettuce:lettuce-core:$lettuce_version"
    testCompile "io.ktor:ktor-server-tests:$ktor_version"
    testCompile "io.ktor:ktor-client-mock:$ktor_version"
    testCompile "io.ktor:ktor-client-mock-jvm:$ktor_version"
    testCompile "io.ktor:ktor-client-mock-js:$ktor_version"
    testCompile "io.ktor:ktor-client-mock-native:$ktor_version"
    testCompile "io.ktor:ktor-server-test-host:$ktor_version"
}

task startNode1(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "demo.Node1Kt"
}

task startNode2(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "demo.Node2Kt"
}

task startReverseProxy(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "demo.ReverseProxyKt"
}

task startClient(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "demo.ClientDemoKt"
}